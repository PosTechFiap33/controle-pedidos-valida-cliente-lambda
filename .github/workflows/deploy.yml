name: Deploy CloudFormation Stack

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore src/ValidaClienteAWSLambda/ValidaClienteAWSLambda.sln

    - name: Build project
      run: dotnet build --configuration Release src/ValidaClienteAWSLambda/ValidaClienteAWSLambda.sln

    - name: Package Lambda function
      run: |
        dotnet publish -c Release -o out src/ValidaClienteAWSLambda/ValidaClienteAWSLambda.sln
        cd out
        zip -r ../valida-cliente-lambda-package.zip .
        cd ..

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ID }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1  # Substitua pela sua região AWS

    - name: Upload Lambda package to S3
      run: aws s3 cp valida-cliente-lambda-package.zip s3://valida-cliente-lambda-s3/valida-cliente-lambda-package.zip

    - name: Deploy CloudFormation stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: valida-cliente-lambda-stack  # Nome do stack CloudFormation
        template: template.yml  # Caminho para o template CloudFormation
        no-fail-on-empty-changeset: true
        capabilities: CAPABILITY_NAMED_IAM
      env:
        LAMBDA_DB_CONNECTION: ${{ secrets.LAMBDA_DB_CONNECTION }}

    - name: Set environment variable for Lambda
      run: |
          aws lambda update-function-configuration \
          --function-name ValidaClienteLambdaFunction \
          --environment "Variables={LAMBDA_DB_CONNECTION=${{ secrets.LAMBDA_DB_CONNECTION }}}"